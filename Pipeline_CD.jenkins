pipeline {
    agent any




    parameters {
        booleanParam(name: 'DRY_RUN',
               defaultValue: false,
               description: 'Запуск dry-run без деплоя в k8s')
    }

    environment {
        CURRENT_DIR = pwd()
    }

     stages {
        stage('Delete workspace before deploy start') {
            steps {
                echo 'Deleting workspace'
                sh 'pwd'
                deleteDir()
            }
        }

        stage('Checkout helm') {
            steps {
                dir('helm')
                    {
                        git branch: 'main', url: 'https://github.com/MRTANKO/apphelm'
                    }
                }
        }

        stage('Checkout values'){
            steps {
                dir('values')
                    {
                        git branch: 'main', url: 'https://github.com/MRTANKO/appvalues'
                    }
                }
        }

        stage('Deploy') {
            steps {
                script {
                echo "Dry_run: ${params.DRY_RUN}"
                    if (params.DRY_RUN)
                        {
                            echo 'Start dry-run without deploy in k8s'
                            sh "helm upgrade --install app-wdb ./helm/java-app-chart -f ./values/java-api-values.yaml --dry-run"
//                 sh "helm upgrade --install app ./helm/java-app-chart -f ./values/java-api-values.yaml -n javanamespace --create-namespace --dry-run"
                    } else
                        {
                            echo 'Start deploy to k8s'
                            sh "helm upgrade --install app ./helm/java-app-chart -f ./values/java-api-values.yaml"
                        }
                }
            }
        }

//         stage('Build docker image') {
//             steps {
//                 dir('demo/docker'){
//                     sh "docker build -t mrtanko/jenkins-java-api:${params.VERSION} ."
//                 }
//
//             }
//         }
//         stage('Push docker image to DockerHub'){
//             steps {
//                 withDockerRegistry(credentialsId: 'dockerhub-cred-mrtanko', url: 'https://index.docker.io/v1/') {
//                docker.image('mrtanko/jenkins-java-api').push('v1.0.0')
//                 sh "docker push mrtanko/jenkins-java-api:${params.VERSION}"
//                 }
//             }
//         }
//         stage ('Delete local docker image')
//         {
//             steps {
//                 sh "docker rmi mrtanko/jenkins-java-api:${params.VERSION}"
//             }
//         }
        stage('Test pwd'){
            steps {
                sh 'ls -la'
                sh 'pwd'
            }
        }
    }
}